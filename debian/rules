#!/usr/bin/make -f

include /usr/share/quilt/quilt.make

libx264N := $(shell sed -rn 's/^Package:[[:space:]]*(libx264-[0-9]+)[[:space:]]*$$/\1/p' debian/control)

DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_HOST_GNU_CPU    ?= $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)

DEB_BUILD_OPTIONS_PARALLEL ?= $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
PARALLEL_FLAGS += $(if $(DEB_BUILD_OPTIONS_PARALLEL),-j$(DEB_BUILD_OPTIONS_PARALLEL))
# will affect concurrency of debian/rules as well
MAKEFLAGS += $(PARALLEL_FLAGS)

include debian/confflags

CFLAGS += -Wall -g -O$(if $(findstring noopt,$(DEB_BUILD_OPTIONS)),0,2)
LDFLAGS += -Wl,--as-needed

build: build-stamp
build-stamp: debian/stamp-patched
	dh_testdir
	# fix version.sh for the debian package
	mv version.sh version.sh-upstream
	cp debian/debian-version.sh version.sh
	chmod +x version.sh
	# Build static lib
	CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" ./configure $(static_confflags)
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/install/static
	$(MAKE) distclean
	# Build shared lib
	CFLAGS="$(CFLAGS) $(shared_extra_cflags)" LDFLAGS="$(LDFLAGS)" ./configure $(shared_confflags)
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/install/shared
ifeq ($(do_opt),yes)
	$(MAKE) distclean
	# Build opt lib
	CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" ./configure $(opt_confflags)
	$(MAKE)
	$(MAKE) install DESTDIR=$(CURDIR)/debian/install/opt
endif
	mv version.sh-upstream version.sh
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -rf debian/install
	[ ! -f Makefile ] || $(MAKE) distclean
	[ ! -f version.sh-upstream ] ||  mv version.sh-upstream version.sh
	$(MAKE) -f debian/rules unpatch
	dh_clean build-stamp

install:
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	dh_install --list-missing --sourcedir=debian/install
ifeq ($(do_opt),yes)
	mkdir -p debian/$(libx264N)$(opt_libdir)
	cp -a debian/install/opt$(opt_libdir)/*.so.* debian/$(libx264N)$(opt_libdir)
endif

binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs -s
	dh_installdocs -s
	dh_installexamples -s
	dh_installman -s
	dh_link -s
	dh_strip -s
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -s
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

binary-indep: build install

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install
